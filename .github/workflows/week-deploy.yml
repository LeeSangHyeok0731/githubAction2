name: Auto PR from Develop to Main

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  repository-projects: write

jobs:
  create-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch all branches
        run: |
          git fetch origin main
          git fetch origin develop

      - name: Check for changes between develop and main
        id: check_changes
        run: |
          if git diff --quiet origin/main..origin/develop; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes between develop and main"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected between develop and main"
          fi

      - name: Check if PR already exists
        if: steps.check_changes.outputs.has_changes == 'true'
        id: check_pr
        run: |
          PR_COUNT=$(gh pr list --base main --head develop --state open --json number | jq length)
          if [ "$PR_COUNT" -gt 0 ]; then
            echo "pr_exists=true" >> $GITHUB_OUTPUT
            echo "Existing PR found"
          else
            echo "pr_exists=false" >> $GITHUB_OUTPUT
            echo "No existing PR found"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get commit information
        if: steps.check_changes.outputs.has_changes == 'true' && steps.check_pr.outputs.pr_exists == 'false'
        id: commit_info
        run: |
          COMMITS=$(git log origin/main..origin/develop --oneline --no-merges | head -10)
          COMMIT_COUNT=$(git rev-list --count origin/main..origin/develop)

          echo "recent_commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          echo "commit_count=$COMMIT_COUNT" >> $GITHUB_OUTPUT

          LAST_AUTHOR=$(git log origin/main..origin/develop --pretty=format:"%an" -1)
          echo "last_author=$LAST_AUTHOR" >> $GITHUB_OUTPUT

      - name: Create Pull Request using GitHub CLI
        if: steps.check_changes.outputs.has_changes == 'true' && steps.check_pr.outputs.pr_exists == 'false'
        id: create_pr
        run: |
          PR_BODY="### 개요 💡\ndevelop 브랜치의 내용을 main 브랜치에 반영합니다."

          PR_URL=$(gh pr create \
            --title "🚀 Auto PR: Develop → Main (${{ steps.commit_info.outputs.commit_count }} commits)" \
            --body "$PR_BODY" \
            --base main \
            --head develop)

          echo "pull-request-url=$PR_URL" >> $GITHUB_OUTPUT
          echo "PR created: $PR_URL"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Output PR information
        if: steps.create_pr.outputs.pull-request-url
        run: |
          echo "Pull Request created successfully!"
          echo "PR URL: ${{ steps.create_pr.outputs.pull-request-url }}"
